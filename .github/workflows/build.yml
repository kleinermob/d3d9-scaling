name: Build d3d9.dll for both 32-bit and 64-bit

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Detours source
        run: |
          curl -L -o detours.zip https://github.com/microsoft/Detours/archive/refs/heads/master.zip
          unzip detours.zip -d detours

      - name: List extracted files (debugging)
        shell: cmd
        run: |
          echo Listing %GITHUB_WORKSPACE%\detours
          dir "%GITHUB_WORKSPACE%\detours"
          echo Listing %GITHUB_WORKSPACE%\detours\Detours-main
          dir "%GITHUB_WORKSPACE%\detours\Detours-main"

      - name: Set Detours directory path
        id: setpath
        run: |
          REM Since detours.sln is in the root of the repo, set that path
          echo detours_dir=%GITHUB_WORKSPACE%
          echo detours_dir=%GITHUB_WORKSPACE% >> $GITHUB_OUTPUT

      - name: Verify detours.sln exists
        shell: cmd
        env:
          DETOURS_DIR: ${{ steps.setpath.outputs.detours_dir }}
        run: |
          echo Checking for detours.sln in %DETOURS_DIR%
          dir "%DETOURS_DIR%"
          if exist "%DETOURS_DIR%\detours.sln" (
            echo detours.sln found!
          ) else (
            echo detours.sln NOT found! Please check directory structure.
            exit 1
          )

      - name: Find Visual Studio installation path
        shell: cmd
        run: |
          for /f "usebackq tokens=*" %%i in (`"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath`) do set "VSINSTALLDIR=%%i"
          echo VSINSTALLDIR=%VSINSTALLDIR%
          if not defined VSINSTALLDIR (
            echo "Visual Studio not found"
            exit 1
          )

      - name: Build Detours for x86
        shell: cmd
        env:
          DETOURS_DIR: ${{ steps.setpath.outputs.detours_dir }}
        run: |
          call "%VSINSTALLDIR%\VC\Auxiliary\Build\vcvarsall.bat" x86
          msbuild "%DETOURS_DIR%\detours.sln" /p:Configuration=Release /p:Platform=Win32

      - name: Build Detours for x64
        shell: cmd
        env:
          DETOURS_DIR: ${{ steps.setpath.outputs.detours_dir }}
        run: |
          call "%VSINSTALLDIR%\VC\Auxiliary\Build\vcvarsall.bat" x64
          msbuild "%DETOURS_DIR%\detours.sln" /p:Configuration=Release /p:Platform=x64

      - name: Build 32-bit DLL with Detours
        shell: cmd
        env:
          DETOURS_DIR: ${{ steps.setpath.outputs.detours_dir }}
        run: |
          call "%VSINSTALLDIR%\VC\Auxiliary\Build\vcvarsall.bat" x86
          msbuild "%DETOURS_DIR%\detours.sln" /p:Configuration=Release /p:Platform=Win32 ^
            /p:AdditionalIncludeDirectories="%DETOURS_DIR%\include" ^
            /p:AdditionalLibraryDirectories="%DETOURS_DIR%\lib.X86" ^
            /p:AdditionalDependencies="detours.lib"
          REM Copy the built DLL
          mkdir "%GITHUB_WORKSPACE%\artifacts\x86" 2>NUL
          copy /Y "%DETOURS_DIR%\bin\detours.lib" "%GITHUB_WORKSPACE%\artifacts\x86\detours.lib"
          copy /Y "%DETOURS_DIR%\bin\detours.dll" "%GITHUB_WORKSPACE%\artifacts\x86\d3d9.dll"

      - name: Build 64-bit DLL with Detours
        shell: cmd
        env:
          DETOURS_DIR: ${{ steps.setpath.outputs.detours_dir }}
        run: |
          call "%VSINSTALLDIR%\VC\Auxiliary\Build\vcvarsall.bat" x64
          msbuild "%DETOURS_DIR%\detours.sln" /p:Configuration=Release /p:Platform=x64 ^
            /p:AdditionalIncludeDirectories="%DETOURS_DIR%\include" ^
            /p:AdditionalLibraryDirectories="%DETOURS_DIR%\lib.X64" ^
            /p:AdditionalDependencies="detours.lib"
          REM Copy the built DLL
          mkdir "%GITHUB_WORKSPACE%\artifacts\x64" 2>NUL
          copy /Y "%DETOURS_DIR%\bin\x64\detours.dll" "%GITHUB_WORKSPACE%\artifacts\x64\d3d9.dll"

      - name: Upload 32-bit DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: d3d9-x86
          path: artifacts\x86

      - name: Upload 64-bit DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: d3d9-x64
          path: artifacts\x64
