name: Build d3d9.dll for x86 and x64

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x86, x64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find Visual Studio installation path
        id: vswhere
        shell: pwsh
        run: |
          $vsPath = (& "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath)
          Write-Host "VSINSTALLDIR=$vsPath"
          echo "VSINSTALLDIR=$vsPath" >> $env:GITHUB_OUTPUT

      - name: Set environment for ${{ matrix.platform }}
        shell: cmd
        run: |
          if /i "${{ matrix.platform }}"=="x86" (
            call "%VSINSTALLDIR%\VC\Auxiliary\Build\vcvarsall.bat" x86
          ) else (
            call "%VSINSTALLDIR%\VC\Auxiliary\Build\vcvarsall.bat" x64
          )

      - name: Build for ${{ matrix.platform }}
        shell: cmd
        run: |
          msbuild d3d9_proxy.vcxproj /p:Configuration=Release /p:Platform=${{ matrix.platform }} /m

      - name: Save DLL artifact
        run: |
          mkdir artifacts\${{ matrix.platform }}
          copy /Y bin\${{ matrix.platform }}\d3d9.dll artifacts\${{ matrix.platform }}\

  # After both matrix jobs complete, upload artifacts
  upload-artifacts:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download x86 artifact
        uses: actions/download-artifact@v4
        with:
          name: x86
          path: artifacts/x86

      - name: Download x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: x64
          path: artifacts/x64

      - name: Upload combined DLLs
        uses: actions/upload-artifact@v4
        with:
          name: d3d9-dlls
          path: artifacts/
